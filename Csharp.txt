1.0 Fundamentals C#:
[ 
   - 1.1 .NET/ DotNET
   - 1.2 IDEs
   - 1.3 Sintaxe
   - 1.4 Tipos de Dados
   - 1.5 Tipos de operadores
   - 1.6 Operadores Aritméticos
   - 1.7 Estrutura de repetição
   - 1.8 Organização de um programa C#
   - 1.9 Array e lista
] 


1.1 .NET/DotNET:

   O .NET Framework é um ambiente de tempo de execução desenvolvido pela Microsoft para executar aplicativos .NET.
   Ele fornece uma ampla biblioteca de classes e suporte para várias linguagens de programação, incluindo C#.

1.2 IDEs:

   IDEs (Ambiente de Desenvolvimento Integrado) são ferramentas que fornecem um conjunto de recursos para desenvolvimento de software, incluindo edição de código, compilação, depuração e execução de programas.
   Exemplos de IDEs populares para desenvolvimento C# incluem Visual Studio e Visual Studio Code.

1.3 Sintaxe:

   A sintaxe em C# define como o código deve ser escrito para que o compilador possa entender e traduzir para instruções de máquina.
   Isso inclui regras para declaração de variáveis, estruturas de controle de fluxo, declaração de funções, etc.

1.4 Tipos de Dados:

   C# suporta uma variedade de tipos de dados, incluindo inteiros, decimais, booleanos, caracteres, cadeias de caracteres, etc.
   Cada tipo de dados tem um tamanho específico em bytes e um conjunto de valores que pode representar.

1.5 Tipos de Operadores:

   Os operadores em C# são símbolos que realizam operações em operandos.
   Isso inclui operadores aritméticos, relacionais, lógicos, de atribuição, etc.

1.6 Operadores Aritméticos:

   Os operadores aritméticos em C# são usados para realizar operações matemáticas em operandos numéricos.
   Exemplos incluem adição (+), subtração (-), multiplicação (*), divisão (/), etc.

1.7 Estrutura de Repetição:

   As estruturas de repetição em C# permitem que você execute um bloco de código repetidamente enquanto uma condição específica for verdadeira.
   Os loops mais comuns são o "for", o "while" e o "do-while".

1.8 Organização de um Programa C#:

   Um programa C# geralmente consiste em um ou mais arquivos de código-fonte que contêm classes, métodos e outras estruturas.
   A estrutura do programa geralmente segue uma hierarquia de namespaces, classes e membros.

1.9 Array e Lista:

   Arrays e listas são estruturas de dados usadas para armazenar coleções de elementos em C#.
   Arrays têm um tamanho fixo, enquanto listas podem crescer dinamicamente à medida que novos elementos são adicionados.

    

