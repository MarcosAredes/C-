
0.0 Documentação: https://learn.microsoft.com/pt-pt/dotnet/csharp/

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

1.0 Tipos de arquivos base em C#:

   Ao contrário de certas linguagens o C# precisa de um código base
   para se programar.
   
   O codigo necessita de pertencer a uma classe, e possui um método Main.
   Mesmo assim o código inicial que é necessário varia de acordo com a sua implementação.


         using System; //NameSpace ou Módulo System
         
         class Principal{
            static void Main()//Metodo{

               //Aqui escreve o codigo dentro das chaves
               
            }
         }

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

2.0 Estrutura de um projeto:

   Todos os projetos em C# trabalhandos no VScode possuem em 
   geral certas características em comum.

   Pasta(Nome:basic)
     |-----> index.cs (.Cs = Csharp ou C#)
               |-----> index.exe (E o arquivo ".cs" compilado 
                                                para executável)

   Dentro do Arquivo.cs você programa/cria o seu código
   Dentro do Arquivo.exe você ver o programa (executa o código)

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

3.0 Execução pelo Terminal e VScode:

   O terminal do windows e o terminal existente no VScode e o mesmo.
   Dessa maneira pode ser utilizado para executar o código.

   Ao utilizar o terminal é necessário a compilação é depois a execução


      PS C:\Users\Doc\C-> cd basic
      PS C:\Users\Doc\C-\basic> dir


         Diretório: C:\Users\Doc\C-\basic


      Mode                 LastWriteTime         Length Name
      ----                 -------------         ------ ----
      -a----        07/05/2024     15:23            186 index.cs
      -a----        02/05/2024     23:40           3584 index.exe


      PS C:\Users\Doc\C-\basic> ./index

      Hello World!

      cd = Permite navegar entre diretórios no sistema de arquivos. Por exemplo, "cd C:\Pasta"
      dir = Permite você ver o que está dentro do diretório
      .\ = e dentro dela existirem os arquivos "index.cs" e "index.exe", ao digitar "./index" no terminal, ele tentará executar o arquivo "index" que estiver marcado como executável.
            
            "No entanto, se ambos "index.cs" e "index.exe" existirem e estiverem 
            marcados como executáveis, é importante saber que o sistema dará preferência 
            para o tipo de arquivo que ele consegue executar diretamente. Por exemplo, se 
            "index.exe" for um executável Windows e "index.cs" for um arquivo de código fonte C#, 
            o sistema pode executar "index.exe" mesmo se você digitar "./index"."

   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

4.0 Fundamentos do C#:

   SEMPRE COLOCAR O ";" 
   Conceitos básicos do C# como Saídas, Entradas, Dados, Conversões, ...


4.1 Saidas(Output) Write e WriteLine:
   É chamado de saída todos os dados que são mostrados no terminal. 
      Para um código C# executar a saída de um dado existem duas funções para isso:
      ° WriteLine() 
      ° Write() 
      Em outras linguagens ex:Python seria o print("hello world")

      --------------------------------------
      Console.Write("Olá, Mundo!")
      
      Console = É uma classe que representa a entrada e saída padrão do 
      console no sistema operacional. Permite interagir com o console, 
      escrevendo ou lendo dados.

      Write=  É um método da classe Console que escreve texto no console.
      
      --------------------------------------------
      
      Console.WriteLine("Olá, mundo");

      E a mesma coisa do Console.Write mas tem quebra de linha
      sendo A mensagem dentro das aspas e vai para linha de baixo
        
         Console.WriteLine("Olá, mundo");
         Console.Write("Voltemos!"); 

         resposta: 
            Olá, mundo
            Voltemos!

      ---------------------------------------------

4.1.1  Formatação de saída:    

   É possível alterara a maneira como um texto é mostrado no terminal utilizando
   os escape sequence.

   Os escape sequence são pequenos comandos colocados dentro da string
   que irão alterar a string no ponto onde são colocados.

      Console.Write("Hello, "\t" World!");

      resposta = Hello,   World!

       
       Mais Sobre Formatação de Saídas (E complicado de entender)
      https://pt.stackoverflow.com/questions/116497/car%C3%A1cteres-de-escape#:~:text=Sequ%C3%AAncias%20de%20escape%20em%20ASCII,para%20o%20outro%2C%20por%20exemplo.&text=Sequ%C3%AAncia%20de%20escape%20%C3%A9%20uma,ou%20seja%2C%20sequ%C3%AAncia%20de%20escape.&text=Espero%20ter%20ajudado.